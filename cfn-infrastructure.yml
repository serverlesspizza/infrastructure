AWSTemplateFormatVersion: 2010-09-09
Description: Serverless Pizza Infrastructure

Parameters:
  Environment:
    Description: The environment
    Type: String
  CertificateArn:
    Description: The certificate ARN
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/certificate_arn'
  HostedZoneId:
    Description: The hosted zone ID
    Type: 'AWS::SSM::Parameter::Value<String>'
    Default: '/hosted_zone_id'
Mappings:
  EnvironmentMap:
    dev:
      DomainName: "api.dev.serverlesspizza.com"
    prod:
      DomainName: "api.serverlesspizza.com"

Resources:
  ApiDomain:
    Type: AWS::ApiGateway::DomainName
    Properties:
      CertificateArn: !Ref CertificateArn
      DomainName: !FindInMap [EnvironmentMap, !Ref Environment, DomainName]

  ApiDNSRecord:
    DependsOn: ApiDomain
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId: !Ref HostedZoneId
      RecordSets:
        - Type: A
          Name: !FindInMap [EnvironmentMap, !Ref Environment, DomainName]
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2 # (hardcoded for all CloudFormation templates)
            DNSName: !GetAtt ApiDomain.DistributionDomainName

  ApiGwAccountConfig:
    Type: "AWS::ApiGateway::Account"
    Properties:
      CloudWatchRoleArn: !GetAtt "ApiGatewayLoggingRole.Arn"

  ApiGatewayLoggingRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - "apigateway.amazonaws.com"
            Action: "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
